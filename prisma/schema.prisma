generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  children      Child[]
  sessions      Session[]
  stories       Story[]
}

model Account {
  id                       String   @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
  refresh_token_expires_in Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())

  @@unique([identifier, token])
}

model Child {
  id        String   @id @default(cuid())
  name      String
  gender    String
  age       Int
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  stories   Story[]
}

model Story {
  id        String   @id @default(cuid())
  title     String
  content   String
  childId   String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  images    Image[]
  child     Child    @relation(fields: [childId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Image {
  id        String   @id @default(cuid())
  storyId   String
  imageUrl  String
  pageIndex Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  story     Story    @relation(fields: [storyId], references: [id], onDelete: Cascade)
}

enum crdb_internal_region {
  gcp_us_east1 @map("gcp-us-east1")
}
